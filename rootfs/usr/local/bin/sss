#!/bin/bash

# if [ "$(id -u)" -ne 0 ]; then
#     exec sudo -E bash $0 $@
# fi

##!/usr/bin/with-contenv bash
set -e

## https://github.com/xjasonlyu/tun2socks/
## https://github.com/heiher/hev-socks5-tunnel
## 全局代理， 使用 tun2socks 代理所有流量进行转发

if [[ -z "${PXY_ADDR}" ]]; then
    echo "PXY_ADDR env value is undefine"
    exit 1
fi

if [[ "${PXY_ADDR}" == *":" ]];then
    # 没有指定端口，使用容器别名后 5 位作为端口
    PXY_SERVER="${PXY_ADDR}$(hostname -a | tail -c 6)"
else
    PXY_SERVER="${PXY_ADDR}"
fi

if [[ -z "$PXY_EXCLUDED" ]]; then
    PXY_EXCLUDED=${PXY_ADDR#*//}
    PXY_EXCLUDED=${PXY_EXCLUDED%%:*}
fi

## PXY_ADDR=""
## PXY_SERVER="socks5://192.168.111.222:41001"
## PXY_EXCLUDED="192.168.0.0/16"

# LAN_IP=$(ip -o -f inet address show eth0 | awk '/scope global/ {print $4}')
GWT_IP=$(ip route show dev eth0 | grep default | awk '{print $3}')

# 清理路由
clear() {
    echo "..."
    echo "clear tun2socks"

    sudo ip link set dev tun0 down
    sudo ip tuntap del mode tun dev tun0
    sudo ip route del default
    sudo ip route add default via $GWT_IP dev eth0
    # ip route del 192.168.0.0/16
    for addr in $(echo ${PXY_EXCLUDED} | tr ',' '\n'); do
        sudo ip route del $addr
    done

    echo "clear tun2socks done"
}

# 配置路由
route() {
    echo "init tun2socks"
    # 创建 tun0 198.18.0.0/15 网络基准测试地址
    sudo ip tuntap add mode tun dev tun0
    sudo ip addr add 198.18.0.1/32 dev tun0
    sudo ip link set dev tun0 up
    # 配置路由
    sudo ip route del default
    sudo ip route add default via 198.18.0.1 dev tun0 metric 5
    sudo ip route add default via $GWT_IP dev eth0 metric 10
    # ip route add 192.168.0.0/16 via $gwt_ip dev eth0 onlink
    for addr in $(echo ${PXY_EXCLUDED} | tr ',' '\n'); do
        sudo ip route add $addr via $GWT_IP dev eth0 onlink
    done

    echo "init tun2socks done"
}

# 更改时区
czone() {
    sleep 3
    ip_info=$(curl -s https://ipinfo.io)
    echo "ZONE[9999] public ip information"
    echo $ip_info | jq
    timezone=$(echo $ip_info | grep -oP '"timezone": "\K[^"]+')
    if [ -n "$timezone" ]; then
        sudo ln -sf /usr/share/zoneinfo/$timezone /etc/localtime
        echo "ZONE[9999] change system timezone: $timezone"
    else
        echo "ZONE[9999] unable to get timezone information"
    fi
}

# 启动服务
start() {
    echo "start tun2socks"
    tun2socks --interface eth0 --device tun0 --proxy $PXY_SERVER
}

case $1 in
    clear)
        clear
        ;;
    route)
        route
        ;;
    czone)
        czone
        ;;
    start)
        start
        ;;
    help)
        echo "Usage: $0 {clear|route|czone|start}"
        exit 1
        ;;
    *)
      # 判断是否存在 tun0， 不存在则初始化
      if ip link show tun0 > /dev/null 2>&1; then
          echo "Network device tun0 exists."
      else
          echo "Network device tun0 does not exist."
          route
      fi
      czone &
      start
      echo "..."
      exit
      ;;
esac
