
## 2. 安装 webtop [sshd]
ARG BASE_IMAGE_TAG
# ================================================================
FROM suisrc/openresty:1.21.4.1-hu-3 as openresty-stage

FROM ghcr.io/suisrc/webtop:base-${BASE_IMAGE_TAG}
# ================================================================
# copy openresty
COPY --from=openresty-stage /usr/local/openresty /usr/local/openresty
COPY --from=openresty-stage /etc/nginx           /etc/nginx

# ================================================================
# set environment variables
ENV LANGUAGE="zh_CN.UTF-8" \
    LANG="zh_CN.UTF-8" \
    USER="debian" \
    HOME="/home/debian" \
    ZSH_CUSTOM="/home/debian/.oh-my-zsh/plugins"

# update linux
RUN mkdir /var/run/openresty &&\
    ln -s /usr/local/openresty/nginx/sbin/nginx /usr/bin/nginx && \
    ln -s /usr/local/openresty/nginx/html       /www &&\
    apt update && DEBIAN_FRONTEND=noninteractive \
    apt install --no-install-recommends -y \
    dpkg \
    sudo \
    bash \
    zsh \
    curl \
    wget \
    ca-certificates \
    jq \
    git \
    unzip \
    p7zip \
    xz-utils \
    nano \
    procps \
    net-tools \
    ntpdate \
    iputils-ping \
    locales \
    libpcre3 \
    inotify-tools &&\
    tzdata \
    util-linux \
    ssl-cert \
    openssl \
    openssh-client \
    openssh-server \
    python3 \
    gcc \
    binutils \
    libxfont2 \
    libdbus-glib-1-2 \
    libatomic1 \
    build-essential \
    libz-dev \ 
    zlib1g-dev \
    fontconfig \
    fonts-noto-core \
    fonts-noto-cjk \
    fonts-noto-color-emoji &&\
    fc-cache -f -v && \
    locale-gen zh_CN.UTF-8 && \
    apt-get autoremove && apt-get clean && \
    rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*

# creating the user and usergroup
RUN groupadd --gid 1000 $USER && \
    useradd  --uid 1000 --gid $USER -d $HOME -m -s /bin/bash $USER && \
    echo $USER ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USER && \
    chmod 0440 /etc/sudoers.d/$USER && chmod g+rw /home && \
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" &&\
    git clone --depth 1 "https://github.com/zsh-users/zsh-autosuggestions" "${ZSH_CUSTOM}/zsh-autosuggestions" &&\
    echo "source ${ZSH_CUSTOM}/zsh-autosuggestions/zsh-autosuggestions.zsh" >> ~/.zshrc &&\
    sed -i "1iZSH_DISABLE_COMPFIX=true" ~/.zshrc && sed -i -e "1iHOME=${HOME}" -e "2isource /etc/profile" /root/.bashrc &&\
    sed -i "3iexport \$(sudo cat /proc/1/environ |tr '\\\\0' '\\\\n' | xargs)" /etc/profile

# /etc/profile
# ssh 连接会导致环境变量消失, 在docker中,可以通过进程ID=1上的环境变量还原, 通过profile文件还原

# add nginx to s6-rc
COPY rootfs/etc/nginx/ /etc/nginx/
COPY rootfs/etc/s6-overlay/s6-rc.d/init-nginx/ /etc/s6-overlay/s6-rc.d/init-nginx/
COPY rootfs/etc/s6-overlay/s6-rc.d/svc-nginx/ /etc/s6-overlay/s6-rc.d/svc-nginx/
RUN  echo "" > /etc/s6-overlay/s6-rc.d/user/contents.d/init-nginx && \
     echo "" > /etc/s6-overlay/s6-rc.d/user/contents.d/svc-nginx && \
     rm -rf /etc/nginx/demo/*.conf

WORKDIR /www

# EXPOSE 80 443
WORKDIR $HOME

# add sshd to s6-rc
COPY rootfs/etc/s6-overlay/s6-rc.d/svc-sshd/ /etc/s6-overlay/s6-rc.d/svc-sshd/
RUN  echo "" > /etc/s6-overlay/s6-rc.d/user/contents.d/svc-sshd

# EXPOSE 22
