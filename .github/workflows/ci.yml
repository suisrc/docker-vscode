name: ci

# https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  #release:
  #  types: [published]
  push:
    branches: [ vsas ]

# jammy: ubuntu 22.04基础镜像
# kclient: 修复了kasm 终端的一些问题和增加了一些功能
# nginx: jammy基础上安装了nginx
# sshd: nginx基础上安装了sshd
# vscode: sshd基础上安装了vscode
# xfce: vscode基础上安装了xfce
#
# dev-~: 专注于开发环境
# ms-dev-~: 开发环境，使用 ms 插件库
# playwright-ms-dev-~: 开发环境，使用 playwright-ms 插件库

env:
<<<<<<< HEAD
  IMAGE_NAME: suisrc/vscode
  IMAGE_VERSION: '1.84.2-cdr'
=======
  IMAGE_NAME: suisrc/webtop
  IMAGE_VERSION: 'playwright-ms-dev-xfce-23121401'
>>>>>>> 01d147ea3d75d9f53d146569b2ee638424c4bc7b
  GITHUB_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  QUAY_REGISTRY: quay.io
  ALIYUN_REGISTRY: registry.cn-hongkong.aliyuncs.com

jobs:
  vsas:
    # if: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
<<<<<<< HEAD
          docker build ./vscode --file ./vscode/${{ github.job }}.Dockerfile --tag image

      - name: Push github image
        #if: false
        #if: startsWith(github.ref, 'refs/tags/v')
        run: |
          REGISTRY_URL=$GITHUB_REGISTRY
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin

          # IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$GITHUB_IMAGE_NAME
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          ## Strip git ref prefix from version (use relase version)
          #VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
          ## Strip "v" prefix from tag name
          #[[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          ## Use Docker `latest` tag convention
          ##[ "$VERSION" == "master" ] && VERSION=latest
          #echo VERSION=$VERSION

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      # - name: Push quay image
      #   run: |
      #     REGISTRY_URL=$QUAY_REGISTRY
      #     echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin

      #     IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
      #     echo IMAGE_ID=$IMAGE_ID
      #     VERSION=$IMAGE_VERSION
      #     echo VERSION=$VERSION

      #     docker tag image $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION

      - name: Push docker image
        run: |
          REGISTRY_URL=$DOCKER_REGISTRY
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      # - name: Push aliyun image
      #   run: |
      #     REGISTRY_URL=$ALIYUN_REGISTRY
      #     echo "${{ secrets.ALIYUN_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.ALIYUN_USER }} --password-stdin

      #     IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
      #     echo IMAGE_ID=$IMAGE_ID
      #     VERSION=$IMAGE_VERSION
      #     echo VERSION=$VERSION

      #     docker tag image $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION

  debian:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build ./vscode --file ./vscode/${{ github.job }}.Dockerfile --tag image
=======
          docker build -f "Dockerfile.${IMAGE_VERSION%%-*}" -t image --no-cache --build-arg BASE_IMAGE_TAG=${IMAGE_VERSION#*-} .
>>>>>>> 01d147ea3d75d9f53d146569b2ee638424c4bc7b

      - name: Push github image
        run: |
          REGISTRY_URL=$GITHUB_REGISTRY
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION-${{ github.job }}
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

<<<<<<< HEAD
      # - name: Push quay image
      #   run: |
      #     REGISTRY_URL=$QUAY_REGISTRY
      #     echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin

      #     IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
      #     echo IMAGE_ID=$IMAGE_ID
      #     VERSION=$IMAGE_VERSION-${{ github.job }}
      #     echo VERSION=$VERSION

      #     docker tag image $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION

      - name: Push docker image
        run: |
          REGISTRY_URL=$DOCKER_REGISTRY
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION-${{ github.job }}
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build ./vscode --file ./vscode/${{ github.job }}.Dockerfile --tag image

      - name: Push github image
        run: |
          REGISTRY_URL=$GITHUB_REGISTRY
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION-${{ github.job }}
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      # - name: Push quay image
      #   run: |
      #     REGISTRY_URL=$QUAY_REGISTRY
      #     echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin

      #     IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
      #     echo IMAGE_ID=$IMAGE_ID
      #     VERSION=$IMAGE_VERSION-${{ github.job }}
      #     echo VERSION=$VERSION

      #     docker tag image $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION

=======
>>>>>>> 01d147ea3d75d9f53d146569b2ee638424c4bc7b
      - name: Push docker image
        run: |
          REGISTRY_URL=$DOCKER_REGISTRY
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          VERSION=$IMAGE_VERSION-${{ github.job }}
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
