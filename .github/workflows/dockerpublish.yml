# github ci
name: Docker

# https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  release:
    types: [published]

env:
  GITHUB_IMAGE_NAME: vscode
  DOCKER_IMAGE_NAME: suisrc/vscode

jobs:
#  centos:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          docker build ./vscode --file ./vscode/centos.Dockerfile --tag image
#
#      - name: Push github image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$GITHUB_IMAGE_NAME
#          #IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          echo IMAGE_ID=$IMAGE_ID
#
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#
#          # Use Docker `latest` tag convention
#          #[ "$VERSION" == "master" ] && VERSION=latest
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push github latest image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$GITHUB_IMAGE_NAME
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.job }}")
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#          VERSION=latest
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push quay image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=quay.io
#          echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push docker image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#  debian:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          docker build ./vscode --file ./vscode/debian.Dockerfile --tag image
#
#      - name: Push github image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$GITHUB_IMAGE_NAME
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push github latest image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/${{ github.repository }}/$GITHUB_IMAGE_NAME
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.job }}")
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push quay image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=quay.io
#          echo "${{ secrets.QUAY_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.QUAY_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#      - name: Push docker image
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#############################################################################################################################
#  centos-graal:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: centos
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#  debian-graal:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: debian
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#############################################################################################################################
#  centos-java:
#    needs: centos
#    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/v')
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#  debian-java:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: debian
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
#############################################################################################################################
#  centos-nodejs:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: centos
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#  debian-nodejs:
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: debian
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build image
#        run: |
#          REGISTRY_URL=docker.pkg.github.com
#          DOCKER_DIR=${{ github.job }}
#          DOCKER_DIR=${DOCKER_DIR##*-}
#          DOCKER_BOS=${{ github.job }}
#          DOCKER_BOS=${DOCKER_BOS%%-*}
#
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
#          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image
#
#      - name: Push docker image
#        run: |
#          REGISTRY_URL=docker.io
#          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin
#
#          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
#          echo IMAGE_ID=$IMAGE_ID
#
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#          echo VERSION=$VERSION
#
#          docker tag image $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#
############################################################################################################################
  centos-python:
    if: startsWith(github.ref, 'refs/tags/v')
    #needs: centos
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          DOCKER_DIR=${{ github.job }}
          DOCKER_DIR=${DOCKER_DIR##*-}
          DOCKER_BOS=${{ github.job }}
          DOCKER_BOS=${DOCKER_BOS%%-*}

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  debian-python:
    if: startsWith(github.ref, 'refs/tags/v')
    #needs: debian
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          DOCKER_DIR=${{ github.job }}
          DOCKER_DIR=${DOCKER_DIR##*-}
          DOCKER_BOS=${{ github.job }}
          DOCKER_BOS=${DOCKER_BOS%%-*}

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

############################################################################################################################
  centos-golang:
    if: startsWith(github.ref, 'refs/tags/v')
    #needs: centos
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          DOCKER_DIR=${{ github.job }}
          DOCKER_DIR=${DOCKER_DIR##*-}
          DOCKER_BOS=${{ github.job }}
          DOCKER_BOS=${DOCKER_BOS%%-*}

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  debian-golang:
    if: startsWith(github.ref, 'refs/tags/v')
    #needs: debian
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          REGISTRY_URL=docker.pkg.github.com
          DOCKER_DIR=${{ github.job }}
          DOCKER_DIR=${DOCKER_DIR##*-}
          DOCKER_BOS=${{ github.job }}
          DOCKER_BOS=${DOCKER_BOS%%-*}

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY_URL -u ${{ github.actor }} --password-stdin
          docker build ./$DOCKER_DIR --file ./$DOCKER_DIR/$DOCKER_BOS.Dockerfile --tag image

      - name: Push docker image
        run: |
          REGISTRY_URL=docker.io
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $REGISTRY_URL -u ${{ secrets.DOCKER_USER }} --password-stdin

          IMAGE_ID=$REGISTRY_URL/$DOCKER_IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')-${{ github.job }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION



